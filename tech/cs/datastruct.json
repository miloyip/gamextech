{
  "nodes": [
    {
      "id": "Data Structure",
      "link": "https://en.wikipedia.org/wiki/Data_structure"
    },
    {
      "id": "Array Data Structure",
      "aka": "Array",
      "link": "https://en.wikipedia.org/wiki/Array_data_structure"
    },
    {
      "id": "Dynamic Array",
      "aka": [
        "Growable Array",
        "Resizable Array",
        "Dynamic Table",
        "Mutable Array",
        "Array List"
      ],
      "link": "https://en.wikipedia.org/wiki/Dynamic_array"
    },
    {
      "id": "Sorted Array",
      "link": "https://en.wikipedia.org/wiki/Sorted_array"
    },
    {
      "id": "Bit Array",
      "link": "https://en.wikipedia.org/wiki/Bit_array"
    },
    {
      "id": "Circular Buffer",
      "link": "https://en.wikipedia.org/wiki/Circular_buffer"
    },
    {
      "id": "Linked Data Structure",
      "link": "https://en.wikipedia.org/wiki/Linked_data_structure"
    },
    {
      "id": "Linked List",
      "link": "https://en.wikipedia.org/wiki/Linked_list"
    },
    {
      "id": "Singly Linked List",
      "link": "https://en.wikipedia.org/wiki/Linked_list#Singly_linked_list"
    },
    {
      "id": "Doubly Linked List",
      "link": "https://en.wikipedia.org/wiki/Doubly_linked_list"
    },
    {
      "id": "Circular Linked List",
      "link": "https://en.wikipedia.org/wiki/Linked_list#Circularly_linked_list"
    },
    {
      "id": "Free List",
      "link": "https://en.wikipedia.org/wiki/Free_list"
    },
    {
      "id": "Tree Data Structure",
      "link": "https://en.wikipedia.org/wiki/Tree_(data_structure)"
    },
    {
      "id": "Binary Tree",
      "link": "https://en.wikipedia.org/wiki/Binary_tree"
    },
    {
      "id": "Binary Search Tree",
      "abbr": "BST",
      "link": "https://en.wikipedia.org/wiki/Binary_search_tree"
    },
    {
      "id": "Self-balancing Binary Search Tree",
      "link": "https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree"
    },
    {
      "id": "AVL tree",
      "author": [
        "Georgy Adelson-Velsky",
        "Evgenii Landis"
      ],
      "title": "An algorithm for the organization of information",
      "journal": "Proceedings of the USSR Academy of Sciences",
      "link": "https://en.wikipedia.org/wiki/AVL_tree",
      "year": 1962
    },
    {
      "id": "Red-black Tree",
      "author": "Rudolf Bayer",
      "title": "Symmetric binary B-Trees: Data structure and maintenance algorithms",
      "journal": "Acta Informatica",
      "link": [
        "https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1457&context=cstech",
        "https://en.wikipedia.org/wiki/Red%E2%80%93black_tree"
      ],
      "year": 1972
    },
    {
      "id": "Left-leaning red–black tree",
      "abbr": "LLRB",
      "author": "Robert Sedgewick",
      "title": "Left-Leaning Red–Black Trees",
      "link": [
        "https://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf",
        "https://en.wikipedia.org/wiki/Left-leaning_red%E2%80%93black_tree"
      ],
      "year": 2008
    },
    {
      "id": "Trie",
      "aka": [
        "Digital Tree",
        "Prefix Tree"
      ],
      "author": "Axel Thue",
      "title": "Über die gegenseitige Lage gleicher Teile gewisser Zeichenreihen",
      "journal": "Skrifter udgivne af Videnskabs-Selskabet i Christiania",
      "link": "https://en.wikipedia.org/wiki/Trie",
      "year": 1912
    },
    {
      "id": "Suffix Tree",
      "aka": "PAT tree",
      "author": "Peter Weiner",
      "title": "Linear pattern matching algorithms",
      "conference": "14th Annual IEEE Symposium on Switching and Automata Theory",
      "link": [
        "https://cpsc.yale.edu/sites/default/files/files/technical-reports/TR17%20Linear%20Pattern%20Matching%20ALgorithms.pdf",
        "https://en.wikipedia.org/wiki/Suffix_tree"
      ],
      "year": 1973
    },
    {
      "id": "Radix Tree",
      "aka": [
        "Radix Trie",
        "Compact Prefix Tree"
      ],
      "link": "https://en.wikipedia.org/wiki/Radix_tree"
    },
    {
      "id": "Heap Data Structure",
      "link": "https://en.wikipedia.org/wiki/Heap_(data_structure)"
    },
    {
      "id": "Binary Heap",
      "author": "J. W. J. Williams",
      "title": "Algorithm 232 - Heapsort",
      "journal": " Communications of the ACM",
      "link": "https://en.wikipedia.org/wiki/Binary_heap",
      "year": 1964
    },
    {
      "id": "Mergeable Heap",
      "link": "https://en.wikipedia.org/wiki/Mergeable_heap"
    },
    {
      "id": "Binomial Heap",
      "author": "Jean Vuillemin",
      "title": "A data structure for manipulating priority queues",
      "journal": "Communications of the ACM",
      "link": [
        "https://dl.acm.org/doi/pdf/10.1145/359460.359478",
        "https://en.wikipedia.org/wiki/Binomial_heap"
      ],
      "year": 1978
    },
    {
      "id": "Fibonacci Heap",
      "author": [
        "Michael L. Fredman",
        "Robert Endre Tarjan"
      ],
      "title": "Fibonacci heaps and their uses in improved network optimization algorithms",
      "journal": "Journal of ACM",
      "link": [
        "http://bioinfo.ict.ac.cn/~dbu/AlgorithmCourses/Lectures/Fibonacci-Heap-Tarjan.pdf",
        "https://en.wikipedia.org/wiki/Fibonacci_heap"
      ],
      "year": 1984
    },
    {
      "id": "Hash-based Structure"
    },
    {
      "id": "Hash Table",
      "author": "Hans Peter Luhn",
      "link": "https://en.wikipedia.org/wiki/Hash_table",
      "year": 1953
    },
    {
      "id": "Hash Function",
      "link": "https://en.wikipedia.org/wiki/Hash_function"
    },
    {
      "id": "Perfect Hash Function",
      "link": "https://en.wikipedia.org/wiki/Perfect_hash_function"
    },
    {
      "id": "Fowler–Noll–Vo Hash Function",
      "abbr": "FNV",
      "author": [
        "Glenn Fowler",
        "Landon Curt Noll",
        "Kiem-Phong Vo"
      ],
      "link": "https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function",
      "year": 1991
    },
    {
      "id": "xxHash",
      "author": "Yann Collet",
      "link": [
        "https://cyan4973.github.io/xxHash/",
        "https://github.com/Cyan4973/xxHash"
      ],
      "year": 2014
    },
    {
      "id": "t1ha",
      "organization": "Positive Technologies",
      "link": "https://github.com/erthink/t1ha",
      "year": 2016
    },
    {
      "id": "wyhash",
      "author": "Yi Wang",
      "link": "https://github.com/wangyi-fudan/wyhash",
      "year": 2019
    },
    {
      "id": "Bloom Filter",
      "author": "Burton Howard Bloom",
      "link": "https://en.wikipedia.org/wiki/Bloom_filter",
      "year": 1970
    }
  ],
  "links": [
    {
      "source": "Computer Science",
      "target": "Data Structure"
    },
    {
      "source": "Data Structure",
      "target": "Array Data Structure"
    },
    {
      "source": "Array Data Structure",
      "target": "Dynamic Array"
    },
    {
      "source": "Array Data Structure",
      "target": "Sorted Array"
    },
    {
      "source": "Array Data Structure",
      "target": "Bit Array"
    },
    {
      "source": "Array Data Structure",
      "target": "Circular Buffer"
    },
    {
      "source": "Data Structure",
      "target": "Linked Data Structure"
    },
    {
      "source": "Linked Data Structure",
      "target": "Linked List"
    },
    {
      "source": "Linked List",
      "target": "Singly Linked List"
    },
    {
      "source": "Linked List",
      "target": "Doubly Linked List"
    },
    {
      "source": "Linked List",
      "target": "Circular Linked List"
    },
    {
      "source": "Linked Data Structure",
      "target": "Free List"
    },
    {
      "source": "Data Structure",
      "target": "Tree Data Structure"
    },
    {
      "source": "Tree Data Structure",
      "target": "Binary Tree"
    },
    {
      "source": "Binary Tree",
      "target": "Binary Search Tree"
    },
    {
      "source": "Binary Search Tree",
      "target": "Self-balancing Binary Search Tree"
    },
    {
      "source": "Self-balancing Binary Search Tree",
      "target": "AVL tree"
    },
    {
      "source": "Self-balancing Binary Search Tree",
      "target": "Red-black Tree"
    },
    {
      "source": "Red-black Tree",
      "target": "Left-leaning red–black tree",
      "type": "derive"
    },
    {
      "source": "Tree Data Structure",
      "target": "Trie"
    },
    {
      "source": "Trie",
      "target": "Suffix Tree",
      "type": "derive"
    },
    {
      "source": "Trie",
      "target": "Radix Tree",
      "type": "derive"
    },
    {
      "source": "Data Structure",
      "target": "Heap Data Structure"
    },
    {
      "source": "Heap Data Structure",
      "target": "Binary Heap"
    },
    {
      "source": "Heap Data Structure",
      "target": "Mergeable Heap"
    },
    {
      "source": "Mergeable Heap",
      "target": "Binomial Heap"
    },
    {
      "source": "Mergeable Heap",
      "target": "Fibonacci Heap"
    },
    {
      "source": "Data Structure",
      "target": "Hash-based Structure"
    },
    {
      "source": "Hash-based Structure",
      "target": "Hash Table"
    },
    {
      "source": "Hash-based Structure",
      "target": "Hash Function"
    },
    {
      "source": "Hash Function",
      "target": "Perfect Hash Function"
    },
    {
      "source": "Hash Function",
      "target": "Fowler–Noll–Vo Hash Function"
    },
    {
      "source": "Hash Function",
      "target": "xxHash"
    },
    {
      "source": "Hash Function",
      "target": "t1ha"
    },
    {
      "source": "Hash Function",
      "target": "wyhash"
    },
    {
      "source": "Hash Function",
      "target": "Cryptographic Hash Function"
    },
    {
      "source": "Hash-based Structure",
      "target": "Bloom Filter"
    }
  ]
}